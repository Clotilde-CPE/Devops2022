name: CI devops 2022 CPE
on:
  #to begin you want to launch this job in main and develop
  push:
    #on veut push sur la branche master
    branches:
    - master
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  test-backend:
    runs-on: ubuntu-18.04
    steps:
      #checkout your github code using actions/checkout@v2.3.3
      - uses: actions/checkout@v2.3.3
    
      #enable to setup jdk 11 using actions/setup-java@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'

      #- name: Cache SonarCloud packages
      #  uses: actions/cache@v1
      #  with:
      #    path: ~/.sonar/cache
      #    key: ${{ runner.os }}-sonar
      #    restore-keys: ${{ runner.os }}-sonar
    
      #- name: Cache Maven packages
      #  uses: actions/cache@v1
      #  with:
      #    path: ~/.m2
      #    key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
      #    restore-keys: ${{ runner.os }}-m2
    
      #build and test the app with the "mvn clean verify" command
      - name: Build and test with Maven
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=Clotilde-CPE_Devops2022 -Dsonar.organization=clotilde-cpe -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }} --file ./simple-api-main/simple-api/pom.xml
    
  # define job to build and publish docker image
  build-and-push-docker-image:
    needs: test-backend
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{secrets.DOCKERHUB_TOKEN }}
      
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Build image and push backend
        uses: docker/build-push-action@v2
        with:
        #relative path to the place where source code with Dockerfile is located
          context: ./simple-api-main/simple-api
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/simple-api:1.0
          # build on feature branches, push only on main branch
          push: true
          
      - name: Build image and push database
        uses: docker/build-push-action@v2
        with:
        # relative path to the place where source code with Dockerfile is located
          context: ./Database
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/Database:1.0
          # build on feature branches, push only on main branch
          push: true

      - name: Build image and push httpd
        uses: docker/build-push-action@v2
        with:
        # relative path to the place where source code with Dockerfile is located
          context: ./proxy
          # Note: tags has to be all lower-case
          tags: ${{secrets.DOCKERHUB_USERNAME}}/httpd:1.0
          # build on feature branches, push only on main branch
          push: true
